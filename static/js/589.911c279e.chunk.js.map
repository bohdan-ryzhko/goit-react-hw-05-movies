{"version":3,"file":"static/js/589.911c279e.chunk.js","mappings":"qRAGaA,EAAkBC,EAAAA,EAAAA,EAAH,4CAIfC,EAAiBD,EAAAA,EAAAA,GAAH,mFAMdE,EAAeF,EAAAA,EAAAA,GAAH,sBAEZG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0F,sGCbVK,EAAQL,EAAAA,EAAAA,GAAH,4CAILM,EAAaN,EAAAA,EAAAA,GAAH,kF,4GCJVO,EAAOP,EAAAA,EAAAA,KAAH,iGAOJQ,EAAcR,EAAAA,EAAAA,MAAH,0DAKXS,EAAcT,EAAAA,EAAAA,MAAH,4F,SCZXU,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAU5B,OACC,UAACJ,EAAD,CAAMK,SATc,SAAAC,GACpBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAS,CAAEC,MAAOH,EAAKI,SAASC,YAAYC,OAClDV,EAAeM,GACfF,EAAKO,OACL,EAGA,WACC,SAACd,EAAD,CAAae,QAAQ,cAArB,UACC,SAACd,EAAD,CACCe,GAAG,cACHC,KAAK,OACLC,KAAK,mBAEP,mBAAQD,KAAK,SAAb,sBAGF,E,uECnBYE,EAAiB,mCAAG,WAAOT,GAAP,0FAElBU,EAAAA,EAAAA,IAAU,4CAA6C,CACnEX,OAAQ,CACPY,QAASC,EAAAA,EACTZ,MAAAA,EACAa,SAAU,WANmB,+JAAH,sDCFjBC,EAAehC,EAAAA,EAAAA,QAAH,sBAEZiC,EAAcjC,EAAAA,EAAAA,GAAH,sB,0BC6CxB,EAxCe,WAAO,IAAD,EAEpB,GAAwCkC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoB3B,EAApB,KACMS,EAAW,UAAGkB,EAAYC,IAAI,gBAAnB,QAA+B,GAE1CC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACJtB,GAELO,EAAkBP,GAChBuB,MAAK,SAAAC,GACL,GAAoB,MAAhBA,EAAKC,OACR,OAAOC,QAAQC,OAAOH,GAEvBR,EAAgBQ,EAAKA,KAAKI,QAC1B,IACAC,OAAM,SAAAC,GACNC,QAAQC,IAAIF,EACZ,GACF,GAAE,CAAC9B,KAGH,SAACY,EAAD,WACC,UAAC,IAAD,YACC,SAACtB,EAAD,CAAYC,eAAgBA,KAC5B,SAAC,IAAD,UAEEwB,EAAakB,OAAS,GACtBlB,EAAamB,KAAI,SAAAC,GAAK,OAAI,SAACtB,EAAD,WACzB,SAAC,KAAD,CAAYuB,MAAO,CAAEC,KAAKjB,GAAYkB,GAAE,UAAKH,EAAM/B,IAAnD,SAA0D+B,EAAMI,SADrBJ,EAAM/B,GAA5B,UAQ3B,C","sources":["components/AdditionalInformation/AdditionalInformation.styled.js","pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","services/fetchSearchMovies.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const AdditionalTitle = styled.p`\n\tfont-size: 16px;\n`;\n\nexport const AdditionalList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n\nexport const AdditionInfo = styled.li``;\n\nexport const StyledLink = styled(Link)`\n\tcolor: #000;\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`;","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n\tfont-size: 24px;\n`;\n\nexport const MoviesList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n\tdisplay: flex;\n\tgap: 15px;\n\theight: 30px;\n\tmargin-bottom: 20px;\n`;\n\nexport const StyledLabel = styled.label`\n\theight: 100%;\n\twidth: 250px;\n`;\n\nexport const StyledInput = styled.input`\n\twidth: 100%;\n\theight: calc(100% - 6px);\n\tborder-radius: 5px;\n`;","import { Form, StyledLabel, StyledInput } from \"./SearchForm.styled\";\n\nexport const SearchForm = ({ setSearchQuery }) => {\n\n\tconst onSubmitForm = event => {\n\t\tevent.preventDefault();\n\t\tconst form = event.currentTarget;\n\t\tconst params = { query: form.elements.searchValue.value }\n\t\tsetSearchQuery(params);\n\t\tform.reset();\n\t}\n\n\treturn (\n\t\t<Form onSubmit={onSubmitForm}>\n\t\t\t<StyledLabel htmlFor=\"searchValue\">\n\t\t\t\t<StyledInput\n\t\t\t\t\tid=\"searchValue\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"searchValue\" />\n\t\t\t</StyledLabel>\n\t\t\t<button type=\"submit\">Search</button>\n\t\t</Form>\n\t)\n}","import axios from \"axios\";\n\nimport { API_KEY } from \"constants/apiKey\";\n\nexport const fetchSearchMovies = async (query) => {\n\ttry {\n\t\treturn await axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n\t\t\tparams: {\n\t\t\t\tapi_key: API_KEY,\n\t\t\t\tquery,\n\t\t\t\tlanguage: \"en-US\",\n\t\t\t},\n\t\t});\n\t} catch (error) {\n\t\treturn error;\n\t}\n}","import styled from \"@emotion/styled\";\n\nexport const SectionMovie = styled.section``;\n\nexport const SearchMovie = styled.li``;","import { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"services/fetchSearchMovies\";\nimport { SearchMovie, SectionMovie } from \"./Movies.styled\";\nimport { Container } from \"index.styled\";\nimport { StyledLink } from \"components/AdditionalInformation/AdditionalInformation.styled\";\nimport { MoviesList } from \"pages/Home/Home.styled\";\n\nconst Movies = () => {\n\n\tconst [searchMovies, setSearchMovies] = useState([]);\n\tconst [searchQuery, setSearchQuery] = useSearchParams();\n\tconst searchValue = searchQuery.get(\"query\") ?? \"\";\n\n\tconst location = useLocation();\n\t\n\tuseEffect(() => {\n\t\tif (!searchValue) return;\n\n\t\tfetchSearchMovies(searchValue)\n\t\t\t.then(data => {\n\t\t\t\tif (data.status !== 200) {\n\t\t\t\t\treturn Promise.reject(data)\n\t\t\t\t};\n\t\t\t\tsetSearchMovies(data.data.results);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t});\n\t}, [searchValue]);\n\n\treturn (\n\t\t<SectionMovie>\n\t\t\t<Container>\n\t\t\t\t<SearchForm setSearchQuery={setSearchQuery} />\n\t\t\t\t<MoviesList>\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchMovies.length > 0 &&\n\t\t\t\t\t\tsearchMovies.map(movie => <SearchMovie key={movie.id}>\n\t\t\t\t\t\t\t<StyledLink state={{ from:location }} to={`${movie.id}`}>{movie.title}</StyledLink>\n\t\t\t\t\t\t</SearchMovie>)\n\t\t\t\t\t}\n\t\t\t\t</MoviesList>\n\t\t\t</Container>\n\t\t</SectionMovie>\n\t)\n}\n\nexport default Movies;"],"names":["AdditionalTitle","styled","AdditionalList","AdditionInfo","StyledLink","Link","Title","MoviesList","Form","StyledLabel","StyledInput","SearchForm","setSearchQuery","onSubmit","event","preventDefault","form","currentTarget","params","query","elements","searchValue","value","reset","htmlFor","id","type","name","fetchSearchMovies","axios","api_key","API_KEY","language","SectionMovie","SearchMovie","useState","searchMovies","setSearchMovies","useSearchParams","searchQuery","get","location","useLocation","useEffect","then","data","status","Promise","reject","results","catch","error","console","log","length","map","movie","state","from","to","title"],"sourceRoot":""}